
alias icecc-check="icecream-sundae -s iceccd.production.build.10gen.cc"

_mongo_tools="$HOME/mongo-tools"
ctool_path="$_mongo_tools"/kal/ctools

mongo-setup-toolchain()
{   
    curl -o toolchain_installer.sh http://mongodbtoolchain.build.10gen.cc/installer.sh
    bash toolchain_installer.sh
    rm -rf ./toolchain_installer.sh
}

#setups your working station with the required tools to work with mongo
mongo-setup-tools()
{	
	command -v npm >/dev/null 2>&1 || { echo >&2 "I require npm but it's not installed.  Aborting."; return 1; }
	command -v cargo >/dev/null 2>&1 || { echo >&2 "I require cargo but it's not installed.  Aborting."; return 1; }

	mkdir -p "$_mongo_tools"

	#install mrlog 
    if [[ ! -d ""$_mongo_tools"/mrlog" ]]; then
        git clone https://github.com/markbenvenuto/mrlog.git "$_mongo_tools"/mrlog
        cd "$_mongo_tools"/mrlog
        cargo install --path .
    fi 

    #install icecc-sundae
    if [[ -n "$_is_macos" ]]; then
        brew install icecream-sundae
    elif [[ -n "$_is_linux" ]]; then
        sudo snap install icecream-sundae
    fi

    #configure europe icecc scheduler
    sed -i s/ICECC_SCHEDULER_HOST=.*/ICECC_SCHEDULER_HOST=iceccd.production.build.10gen.cc/g /etc/icecc/icecc.conf
    sudo service iceccd restart

	#install mark-benvenuto extension
    _mark_benvenuto_extesion_path="$_mongo_tools"/mongodev
    if [[ ! -d "$_mark_benvenuto_extesion_path" ]]; then
       	git clone git@github.com:markbenvenuto/mongodev.git $_mark_benvenuto_extesion_path && \
        cd $_mark_benvenuto_extesion_path && \
        npm install && npm run compile
    fi

    mkdir -p "$HOME/.vscode/extensions" && ln -s $_mark_benvenuto_extesion_path $HOME/.vscode/extensions/markbenvenuto.mongodev-0.0.1;
    mkdir -p "$HOME/.vscode-server/extensions" && ln -s $_mark_benvenuto_extesion_path $HOME/.vscode-server/extensions/markbenvenuto.mongodev-0.0.1;

    #install db-contrib-tool
    if [[ ! -d ""$_mongo_tools"/db-contrib-tool" ]]; then
        git clone git@github.com:10gen/db-contrib-tool.git "$_mongo_tools"/db-contrib-tool
    fi

    #install ctools from kal's workspace 
    if [[ ! -d "$ctool_path" ]]; then
        git clone https://github.com/kaloianm/workscripts.git "$_mongo_tools"/kal
    fi
}

mongo-setup-repos()
{
    [ -d "~/mongo-v44" ] || git clone --depth 1 --branch v4.4  git@github.com:10gen/mongo ~/mongo-v44
    [ -d "~/mongo-v50" ] || git clone --depth 1 --branch v5.0  git@github.com:10gen/mongo ~/mongo-v50
    [ -d "~/mongo-v60" ] || git clone --depth 1 --branch v6.0  git@github.com:10gen/mongo ~/mongo-v60
    [ -d "~/mongo-v70" ] || git clone --depth 1 --branch v7.0  git@github.com:10gen/mongo ~/mongo-v70
    [ -d "~/mongo"] ||  git clone git@github.com:10gen/mongo ~/mongo
    [ -d "~/mongo2"] ||  git clone git@github.com:10gen/mongo ~/mongo2
    [ -d "~/mongo3"] ||  git clone git@github.com:10gen/mongo ~/mongo3
}

mongo-update-tools()
{
    [ -d ""$_mongo_tools"" ] || { echo >&2 "I require "$_mongo_tools" but it's not installed. Please run mongo-setup-tools. Aborting."; return 1; }

    _cws=$(pwd)
    #for every folder in mongo-tools
    for d in "$_mongo_tools"/*; do
        [ -d "$d" ] || continue # if not a directory, skip
        cd $d
        git pull
    done
    mkdir -p "$HOME/.vscode/extensions" && ln -s $_mark_benvenuto_extesion_path $HOME/.vscode/extensions/markbenvenuto.mongodev-0.0.1;
    mkdir -p "$HOME/.vscode-server/extensions" && ln -s $_mark_benvenuto_extesion_path $HOME/.vscode-server/extensions/markbenvenuto.mongodev-0.0.1;
    cd $_cws
}

